package onnxtest

// this file is auto-generated... DO NOT EDIT

import (
	"github.com/owulveryck/onnx-go/backend/testbackend"
	"gorgonia.org/tensor"
)

func init() {
	testbackend.Register("Selu", "TestSelu", NewTestSelu)
}

// NewTestSelu version: 3.
func NewTestSelu() *testbackend.TestCase {
	return &testbackend.TestCase{
		OpType: "Selu",
		Title:  "TestSelu",
		ModelB: []byte{0x8, 0x3, 0x12, 0xc, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2d, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x6d, 0xa, 0x2e, 0xa, 0x1, 0x78, 0x12, 0x1, 0x79, 0x22, 0x4, 0x53, 0x65, 0x6c, 0x75, 0x2a, 0xf, 0xa, 0x5, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x15, 0x0, 0x0, 0x0, 0x40, 0xa0, 0x1, 0x1, 0x2a, 0xf, 0xa, 0x5, 0x67, 0x61, 0x6d, 0x6d, 0x61, 0x15, 0x0, 0x0, 0x40, 0x40, 0xa0, 0x1, 0x1, 0x12, 0x9, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x75, 0x5a, 0x17, 0xa, 0x1, 0x78, 0x12, 0x12, 0xa, 0x10, 0x8, 0x1, 0x12, 0xc, 0xa, 0x2, 0x8, 0x3, 0xa, 0x2, 0x8, 0x4, 0xa, 0x2, 0x8, 0x5, 0x62, 0x17, 0xa, 0x1, 0x79, 0x12, 0x12, 0xa, 0x10, 0x8, 0x1, 0x12, 0xc, 0xa, 0x2, 0x8, 0x3, 0xa, 0x2, 0x8, 0x4, 0xa, 0x2, 0x8, 0x5, 0x42, 0x2, 0x10, 0x9},

		/*

		   &pb.NodeProto{
		     Input:     []string{"x"},
		     Output:    []string{"y"},
		     Name:      "",
		     OpType:    "Selu",
		     Attributes: ([]*pb.AttributeProto) (len=2 cap=2) {
		    (*pb.AttributeProto)(0xc000118700)(name:"alpha" type:FLOAT f:2 ),
		    (*pb.AttributeProto)(0xc000118800)(name:"gamma" type:FLOAT f:3 )
		   }
		   ,
		   },


		*/

		Input: []tensor.Tensor{

			tensor.New(
				tensor.WithShape(3, 4, 5),
				tensor.WithBacking([]float32{1.7640524, 0.4001572, 0.978738, 2.2408931, 1.867558, -0.9772779, 0.95008844, -0.1513572, -0.10321885, 0.41059852, 0.14404356, 1.4542735, 0.7610377, 0.121675014, 0.44386324, 0.33367434, 1.4940791, -0.20515826, 0.3130677, -0.85409576, -2.5529897, 0.6536186, 0.8644362, -0.742165, 2.2697546, -1.4543657, 0.045758516, -0.18718386, 1.5327792, 1.4693588, 0.15494743, 0.37816253, -0.88778573, -1.9807965, -0.34791216, 0.15634897, 1.2302907, 1.2023798, -0.3873268, -0.30230275, -1.048553, -1.420018, -1.7062702, 1.9507754, -0.5096522, -0.4380743, -1.2527953, 0.7774904, -1.6138978, -0.21274029, -0.89546657, 0.3869025, -0.51080513, -1.1806322, -0.028182229, 0.42833188, 0.06651722, 0.3024719, -0.6343221, -0.36274117}),
			),
		},
		ExpectedOutput: []tensor.Tensor{

			tensor.New(
				tensor.WithShape(3, 4, 5),
				tensor.WithBacking([]float32{5.292157, 1.2004716, 2.936214, 6.722679, 5.602674, -3.7419953, 2.8502653, -0.84275615, -0.58842266, 1.2317955, 0.4321307, 4.3628206, 2.283113, 0.36502504, 1.3315897, 1.001023, 4.4822373, -1.1128896, 0.93920314, -3.4459927, -5.5329084, 1.9608557, 2.5933087, -3.1435075, 6.809264, -4.598709, 0.13727555, -1.0242527, 4.5983377, 4.4080763, 0.4648423, 1.1344876, -3.530604, -5.172244, -1.7630346, 0.46904692, 3.690872, 3.6071396, -1.9267849, -1.5653143, -3.8973334, -4.5497417, -4.9107504, 5.8523264, -2.395773, -2.1283329, -4.28577, 2.3324711, -4.80534, -1.1498036, -3.549498, 1.1607075, -2.3999262, -4.1574926, -0.1667329, 1.2849957, 0.19955166, 0.90741575, -2.818231, -1.825401}),
			),
		},
	}
}

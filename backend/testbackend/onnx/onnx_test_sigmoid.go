package onnxtest

// this file is auto-generated... DO NOT EDIT

import (
	"github.com/owulveryck/onnx-go/backend/testbackend"
	"gorgonia.org/tensor"
)

func init() {
	testbackend.Register("Sigmoid", "TestSigmoid", NewTestSigmoid)
}

// NewTestSigmoid version: 3.
func NewTestSigmoid() *testbackend.TestCase {
	return &testbackend.TestCase{
		OpType: "Sigmoid",
		Title:  "TestSigmoid",
		ModelB: []byte{0x8, 0x3, 0x12, 0xc, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2d, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x51, 0xa, 0xf, 0xa, 0x1, 0x78, 0x12, 0x1, 0x79, 0x22, 0x7, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x69, 0x64, 0x12, 0xc, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6d, 0x6f, 0x69, 0x64, 0x5a, 0x17, 0xa, 0x1, 0x78, 0x12, 0x12, 0xa, 0x10, 0x8, 0x1, 0x12, 0xc, 0xa, 0x2, 0x8, 0x3, 0xa, 0x2, 0x8, 0x4, 0xa, 0x2, 0x8, 0x5, 0x62, 0x17, 0xa, 0x1, 0x79, 0x12, 0x12, 0xa, 0x10, 0x8, 0x1, 0x12, 0xc, 0xa, 0x2, 0x8, 0x3, 0xa, 0x2, 0x8, 0x4, 0xa, 0x2, 0x8, 0x5, 0x42, 0x2, 0x10, 0x9},

		/*

		   &ir.NodeProto{
		     Input:     []string{"x"},
		     Output:    []string{"y"},
		     Name:      "",
		     OpType:    "Sigmoid",
		     Attributes: ([]*ir.AttributeProto) <nil>
		   ,
		   },


		*/

		Input: []tensor.Tensor{

			tensor.New(
				tensor.WithShape(3, 4, 5),
				tensor.WithBacking([]float32{1.7640524, 0.4001572, 0.978738, 2.2408931, 1.867558, -0.9772779, 0.95008844, -0.1513572, -0.10321885, 0.41059852, 0.14404356, 1.4542735, 0.7610377, 0.121675014, 0.44386324, 0.33367434, 1.4940791, -0.20515826, 0.3130677, -0.85409576, -2.5529897, 0.6536186, 0.8644362, -0.742165, 2.2697546, -1.4543657, 0.045758516, -0.18718386, 1.5327792, 1.4693588, 0.15494743, 0.37816253, -0.88778573, -1.9807965, -0.34791216, 0.15634897, 1.2302907, 1.2023798, -0.3873268, -0.30230275, -1.048553, -1.420018, -1.7062702, 1.9507754, -0.5096522, -0.4380743, -1.2527953, 0.7774904, -1.6138978, -0.21274029, -0.89546657, 0.3869025, -0.51080513, -1.1806322, -0.028182229, 0.42833188, 0.06651722, 0.3024719, -0.6343221, -0.36274117}),
			),
		},
		ExpectedOutput: []tensor.Tensor{

			tensor.New(
				tensor.WithShape(3, 4, 5),
				tensor.WithBacking([]float32{0.8537165, 0.59872544, 0.7268578, 0.9038621, 0.8661755, 0.27343222, 0.72113293, 0.4622328, 0.47421816, 0.6012314, 0.53594875, 0.81065524, 0.68157893, 0.53038126, 0.6091792, 0.5826531, 0.8166897, 0.44888958, 0.57763386, 0.2985744, 0.07222589, 0.6578254, 0.7035867, 0.3225309, 0.90634096, 0.18933058, 0.5114376, 0.4533402, 0.82241255, 0.8129599, 0.5386595, 0.59342986, 0.291567, 0.121233955, 0.4138888, 0.53900784, 0.77386945, 0.7689479, 0.404361, 0.42499468, 0.25950307, 0.19465877, 0.15364811, 0.8755312, 0.37527508, 0.39219993, 0.22221662, 0.685139, 0.16604815, 0.4470146, 0.289983, 0.5955368, 0.3750048, 0.23493853, 0.4929549, 0.60547525, 0.5166232, 0.57504666, 0.34653115, 0.41029614}),
			),
		},
	}
}

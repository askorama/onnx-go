package onnxtest

// this file is auto-generated... DO NOT EDIT

import (
	"github.com/owulveryck/onnx-go/backend/testbackend"
	"gorgonia.org/tensor"
)

func init() {
	testbackend.Register("Sqrt", "TestSqrt", NewTestSqrt)
}

// NewTestSqrt version: 3.
func NewTestSqrt() *testbackend.TestCase {
	return &testbackend.TestCase{
		OpType: "Sqrt",
		Title:  "TestSqrt",
		ModelB: []byte{0x8, 0x3, 0x12, 0xc, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2d, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x4b, 0xa, 0xc, 0xa, 0x1, 0x78, 0x12, 0x1, 0x79, 0x22, 0x4, 0x53, 0x71, 0x72, 0x74, 0x12, 0x9, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x71, 0x72, 0x74, 0x5a, 0x17, 0xa, 0x1, 0x78, 0x12, 0x12, 0xa, 0x10, 0x8, 0x1, 0x12, 0xc, 0xa, 0x2, 0x8, 0x3, 0xa, 0x2, 0x8, 0x4, 0xa, 0x2, 0x8, 0x5, 0x62, 0x17, 0xa, 0x1, 0x79, 0x12, 0x12, 0xa, 0x10, 0x8, 0x1, 0x12, 0xc, 0xa, 0x2, 0x8, 0x3, 0xa, 0x2, 0x8, 0x4, 0xa, 0x2, 0x8, 0x5, 0x42, 0x2, 0x10, 0x9},

		/*

		   &ir.NodeProto{
		     Input:     []string{"x"},
		     Output:    []string{"y"},
		     Name:      "",
		     OpType:    "Sqrt",
		     Attributes: ([]*ir.AttributeProto) <nil>
		   ,
		   },


		*/

		Input: []tensor.Tensor{

			tensor.New(
				tensor.WithShape(3, 4, 5),
				tensor.WithBacking([]float32{1.7640524, 0.4001572, 0.978738, 2.2408931, 1.867558, 0.9772779, 0.95008844, 0.1513572, 0.10321885, 0.41059852, 0.14404356, 1.4542735, 0.7610377, 0.121675014, 0.44386324, 0.33367434, 1.4940791, 0.20515826, 0.3130677, 0.85409576, 2.5529897, 0.6536186, 0.8644362, 0.742165, 2.2697546, 1.4543657, 0.045758516, 0.18718386, 1.5327792, 1.4693588, 0.15494743, 0.37816253, 0.88778573, 1.9807965, 0.34791216, 0.15634897, 1.2302907, 1.2023798, 0.3873268, 0.30230275, 1.048553, 1.420018, 1.7062702, 1.9507754, 0.5096522, 0.4380743, 1.2527953, 0.7774904, 1.6138978, 0.21274029, 0.89546657, 0.3869025, 0.51080513, 1.1806322, 0.028182229, 0.42833188, 0.06651722, 0.3024719, 0.6343221, 0.36274117}),
			),
		},
		ExpectedOutput: []tensor.Tensor{

			tensor.New(
				tensor.WithShape(3, 4, 5),
				tensor.WithBacking([]float32{1.3281764, 0.6325798, 0.9893119, 1.4969614, 1.3665862, 0.9885737, 0.9747248, 0.38904652, 0.3212769, 0.6407796, 0.37953073, 1.2059326, 0.8723748, 0.34881946, 0.6662306, 0.57764554, 1.2223253, 0.452944, 0.55952454, 0.924173, 1.5978078, 0.8084668, 0.9297506, 0.86149, 1.5065705, 1.2059709, 0.2139124, 0.4326475, 1.2380546, 1.2121711, 0.39363363, 0.6149492, 0.94222385, 1.4074078, 0.58984077, 0.39540988, 1.1091846, 1.0965308, 0.6223559, 0.54982066, 1.0239887, 1.191645, 1.3062428, 1.3967016, 0.7138993, 0.6618718, 1.1192834, 0.88175416, 1.2703928, 0.4612378, 0.94629097, 0.6220149, 0.7147063, 1.0865691, 0.16787563, 0.6544707, 0.25790933, 0.54997444, 0.7964434, 0.60227996}),
			),
		},
	}
}
